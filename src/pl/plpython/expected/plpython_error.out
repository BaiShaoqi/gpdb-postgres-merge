-- test error handling, i forgot to restore Warn_restart in
-- the trigger handler once. the errors and subsequent core dump were
-- interesting.
SELECT invalid_type_uncaught('rick');
<<<<<<< HEAD
ERROR:  plpy.SPIError: type "test" does not exist
CONTEXT:  Traceback (most recent call last):
  PL/Python function "invalid_type_uncaught", line 3, in <module>
    SD["plan"] = plpy.prepare(q, [ "test" ])
PL/Python function "invalid_type_uncaught"
SELECT invalid_type_caught('rick');
NOTICE:  type "test" does not exist
CONTEXT:  PL/Python function "invalid_type_caught"
 invalid_type_caught 
---------------------
 
(1 row)

SELECT invalid_type_reraised('rick');
ERROR:  plpy.Error: type "test" does not exist
CONTEXT:  Traceback (most recent call last):
  PL/Python function "invalid_type_reraised", line 6, in <module>
    plpy.error(str(ex))
PL/Python function "invalid_type_reraised"
=======
WARNING:  PL/Python: in PL/Python function "invalid_type_uncaught"
DETAIL:  plpy.SPIError: unrecognized error in PLy_spi_prepare
ERROR:  type "test" does not exist
SELECT invalid_type_caught('rick');
WARNING:  PL/Python: in PL/Python function "invalid_type_caught"
DETAIL:  plpy.SPIError: unrecognized error in PLy_spi_prepare
ERROR:  type "test" does not exist
SELECT invalid_type_reraised('rick');
WARNING:  PL/Python: in PL/Python function "invalid_type_reraised"
DETAIL:  plpy.SPIError: unrecognized error in PLy_spi_prepare
ERROR:  type "test" does not exist
>>>>>>> 4d53a2f9699547bdc12831d2860c9d44c465e805
SELECT valid_type('rick');
 valid_type 
------------
 
(1 row)

--
-- Test Unicode error handling.
--
SELECT unicode_return_error();
<<<<<<< HEAD
 unicode_return_error 
----------------------
 \u0080
(1 row)

INSERT INTO unicode_test (testvalue) VALUES ('test');
SELECT unicode_plan_error1();
 unicode_plan_error1 
---------------------
 \u0080
(1 row)

SELECT unicode_plan_error2();
ERROR:  TypeError: plpy.execute takes a sequence as its second argument (plpython.c:4703)
CONTEXT:  Traceback (most recent call last):
  PL/Python function "unicode_plan_error2", line 3, in <module>
    rv = plpy.execute(plan, u"\x80", 1)
PL/Python function "unicode_plan_error2"
=======
ERROR:  PL/Python: could not create string representation of Python object in PL/Python function "unicode_return_error" while creating return value
DETAIL:  exceptions.UnicodeEncodeError: 'ascii' codec can't encode character u'\x80' in position 0: ordinal not in range(128)
INSERT INTO unicode_test (testvalue) VALUES ('test');
ERROR:  PL/Python: could not compute string representation of Python object in PL/Python function "unicode_trigger_error" while modifying trigger row
DETAIL:  exceptions.UnicodeEncodeError: 'ascii' codec can't encode character u'\x80' in position 0: ordinal not in range(128)
SELECT unicode_plan_error1();
WARNING:  PL/Python: in PL/Python function "unicode_plan_error1"
DETAIL:  plpy.Error: unrecognized error in PLy_spi_execute_plan
ERROR:  PL/Python: PL/Python function "unicode_plan_error1" could not execute plan
DETAIL:  exceptions.UnicodeEncodeError: 'ascii' codec can't encode character u'\x80' in position 0: ordinal not in range(128)
SELECT unicode_plan_error2();
ERROR:  PL/Python: PL/Python function "unicode_plan_error2" could not execute plan
DETAIL:  exceptions.UnicodeEncodeError: 'ascii' codec can't encode character u'\x80' in position 0: ordinal not in range(128)
>>>>>>> 4d53a2f9699547bdc12831d2860c9d44c465e805
